name: Run Build and Unit tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'

jobs:
  main:
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}

    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages

    steps:
      - name: 📝 Fetch Sources 📝
        uses: actions/checkout@v4

      - name: ⚙ Setup .NET SDK ⚙
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: ♻ NuGet Cache ♻
        uses: actions/cache@v4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.csproj') }}

      - name: 🔄 Restore Nuget Packages 🔄
        shell: bash
        run: dotnet restore

      - name: 🛠 Build Solution 🛠
        shell: bash
        run: dotnet build

      - name: ✅ Run Unit Tests ✅
        shell: bash
        run: dotnet test

      - name: 🚀 Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Cache SonarCloud Packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 🗃️ Cache SonarCloud Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: 🔧 Install SonarCloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner

      - name: 🔧 Install JetBrains dotCover
        run: dotnet tool install --global JetBrains.dotCover.CommandLineTools --version 2023.3.0

      - name: 🏗️ Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner begin /k:"Bardin08_algorithms" /o:"bardin08" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./Algorithms.sln
          dotnet-dotCover cover-dotnet --AttributeFilters="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute" --Filters="-:*.Tests" --Output=dotCover.Output.html --ReportType=HTML -- test "./Algorithms.sln"
          ~/.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"